# AVR Inline Assembly Arithmetic Operations

This project demonstrates basic arithmetic operations using **inline assembly** on an AVR microcontroller (e.g., Arduino). The code performs addition, subtraction, add-with-carry, subtract-immediate-with-carry, and 16-bit word arithmetic using assembly instructions.

---

## Project Description
The goal of this project is to practice using AVR inline assembly within C/C++ programs to perform low-level arithmetic. The program showcases:

- **Addition (`ADD`)**  
- **Subtraction (`SUB`)**  
- **Add with carry (`ADC`)**  
- **Subtract immediate and carry (`SUBI` + `SBC`)**  
- **16-bit addition and subtraction (`ADIW`, `SBIW`)**

The results of these operations are printed to the Serial Monitor.

---

## Variables Used
| Variable | Type | Description |
|----------|------|-------------|
| `a` | `uint8_t` | First 8-bit number |
| `b` | `uint8_t` | Second 8-bit number |
| `c` | `uint8_t` | Third 8-bit number |
| `wordResult` | `uint16_t` | 16-bit word used for word arithmetic |
| `result` | `uint8_t` | Stores 8-bit addition result |
| `subResult` | `uint8_t` | Stores 8-bit subtraction result |
| `carryFlag` | `uint8_t` | Stores carry flag from ADC operation |
| `sumc` | `uint8_t` | Stores result of add-with-carry |
| `subiResult` | `uint8_t` | Stores result of subtract immediate |
| `subiCResult` | `uint8_t` | Stores result of subtract immediate with carry |
| `wordAddResult` | `uint16_t` | Stores 16-bit addition result |
| `wordSubResult` | `uint16_t` | Stores 16-bit subtraction result |

---

## How It Works
1. **Addition (`ADD`)**: Adds `a` and `b` and stores the result.  
2. **Subtraction (`SUB`)**: Subtracts `c` from the previous addition result.  
3. **Add with carry (`ADC`)**: Adds `a` and `b` with carry flag consideration.  
4. **Subtract Immediate and Carry (`SUBI` + `SBC`)**: Subtracts 10 from `c` and then subtracts `b` including the carry.  
5. **Word Arithmetic (`ADIW` / `SBIW`)**: Performs addition and subtraction on a 16-bit word (`wordResult`).  

All results are printed to the **Serial Monitor** for verification.

---

## Tools & Languages
- **Language:** C/C++ with AVR Inline Assembly  
- **Platform:** Arduino / ESP32 (AVR-compatible)  
- **IDE:** Arduino IDE  

---

## Usage
1. Connect your AVR microcontroller to your computer.  
2. Open the code in the Arduino IDE.  
3. Upload the program.  
4. Open the **Serial Monitor** at 9600 baud to see the results of the arithmetic operations.

---
